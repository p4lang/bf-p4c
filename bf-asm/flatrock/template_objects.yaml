global:
  - namespace=Flatrock
  - binary_offset
  - emit_binary
  - emit_fieldname
  - emit_json
  - enable_disable
  - widereg
  # - write_dma=galois_field_matrix
generate:
  memories:
    tfc_mem:
      memories.ftr_mem.h: [ decl, name=memories.top ]
      memories.ftr_mem.cpp: [ defn, name=memories.top,
          -Imemories.ftr_mem.h, -Imemories.pipe_addrmap.h ]
    fpp_mem_rspec:  # pipes
      memories.pipe_addrmap.h: [ decl, name=memories.pipe, widereg ]
      memories.pipe_addrmap.cpp: [ defn, name=memories.pipe, widereg,
          -Imemories.pipe_addrmap.h ]
  regs:
    tfc_reg:
      regs.ftr_reg.h: [ decl, name=regs.top ]
      regs.ftr_reg.cpp: [ defn, name=regs.top,
          -Iregs.ftr_reg.h, -Iregs.pipe_addrmap.h ]
    fpp_rspec:  # pipe
      regs.pipe_addrmap.h: [ decl, name=regs.pipe, widereg ]
      regs.pipe_addrmap.cpp: [ defn, name=regs.pipe, widereg,
          -Iregs.pipe_addrmap.h, -Iregs.mau_addrmap.h ]
    ppu_rspec:  # mau
      regs.mau_addrmap.h: [ decl, name=regs.match_action_stage.%02x ]
      regs.mau_addrmap.cpp: [ defn, name=regs.match_action_stage.%02x,
          -Iregs.mau_addrmap.h ]
    # no parser/deparser in csr yet?

ignore:
  memories:
    # tfc_mem
    - tm_top_mem_rspec  # tm
    # fpp_mem_rspec
    # prsr_mem_rspec
    # pprsr_mem_rspec
    - dprsr_mem_rspec
    - ppu_pack_mem_rspec
    - mdp_mem_rspec
  regs:
    # tfc_reg
    - dvsl_addrmap
    # fpp / fpp_rspec
