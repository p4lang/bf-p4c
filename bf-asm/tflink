#!/bin/sh

WALLE=""
CHIP="tofino"
OUT="tofino.bin"
objs=""
tmpdir=""

tempfile() {
    file=$(basename $1 $2)
    orig=file
    ctr=1
    while [ -r $tmpdir/$file ]; do
        file=$ctr-$file
        ctr=$((ctr + 1))
    done
    echo $file
}

while [ $# -gt 0 ]; do
    case $1 in
    -o)
        OUT="$2"
        shift ; shift ;;
    --walle|-w)
        WALLE="$2"
        shift ; shift ;;
    --target|-t)
        CHIP="$2"
        shift ; shift ;;
    *.json.Z)
        if [ -z "$tmpdir" ]; then
            tmpdir=$(mktemp -d)
        fi
        file=$(tempfile $1 .Z)
        gunzip -c $1 >$tmpdir/$file
        objs="$objs $tmpdir/$file"
        shift ;;
    *.json.gz)
        if [ -z "$tmpdir" ]; then
            tmpdir=$(mktemp -d)
        fi
        file=$(tempfile $1 .gz)
        gunzip -c $1 >$tmpdir/$file
        objs="$objs $tmpdir/$file"
        shift ;;
    *.json.bz)
        if [ -z "$tmpdir" ]; then
            tmpdir=$(mktemp -d)
        fi
        file=$(tempfile $1 .bz)
        bzcat $1 >$tmpdir/$file
        objs="$objs $tmpdir/$file"
        shift ;;
    *.json.bz2)
        if [ -z "$tmpdir" ]; then
            tmpdir=$(mktemp -d)
        fi
        file=$(tempfile $1 .bz2)
        bzcat $1 >$tmpdir/$file
        objs="$objs $tmpdir/$file"
        shift ;;
    *.json)
        objs="$objs $1"
        shift ;;
    *)
        echo >&2 "Unknown argument $1"
        shift ;;
    esac
done

if [ ! -x "$WALLE" ]; then
    if [ -e "$WALLE" ]; then
        echo "$WALLE must be executable"
    else
        echo "4: $WALLE"
        echo >&2 "Can't find walle"
    fi
    exit 1
fi

$WALLE --target $CHIP -o $OUT $objs

if [ -d "$tmpdir" ]; then
    rm -rf $tmpdir
fi
