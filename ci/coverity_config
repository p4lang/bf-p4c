GITHUB:
  REPO_URL: "https://github.com/intel-restricted/networking.switching.barefoot.bf-p4c-compilers"                   #[Required] Link to the main directory of project hosted on GitHub
  GITHUB_API_URL: "https://api.github.com"                                                                         #[Required] API Address of GitHub

PROJECTS:
  - NAME: "bf-p4c-compilers"
    PROJECT_SRC_DIR: ""                                                                                            #[Required] Path to the main source directory within project
    PREBUILD_STAGES:                                                                                               #[Optional] Define if any PREBUILD_SCRIPT is needed
    - NAME: "Git submodule update"                                                                                 #[Required] Name of the Script
      WORKDIR: ""                                                                                 #[Optional] Path to the working directory for this script
      COMMAND: "git submodule update --init --recursive -j 16"
    
    - NAME: "Copy p4factory artifacts"                                                                                #[Required] Name of the Script
      WORKDIR: ""                                                                                               # workdir vs root repo                                                                  #[Optional] Path to the working directory for this script
      COMMAND: "pwd; ls; cp -rf /bf/install ."
        
    - NAME: "bootstrap_bfn_compilers"
      WORKDIR: ""
      COMMAND: "pwd; ls; ./bootstrap_bfn_compilers.sh --no-ptf --build-dir build --build-type RelWithDebInfo --disable-unified -DCMAKE_INSTALL_PREFIX=$(pwd)/install --minimal-config -DFIXED_LIBDYNHASH=ON -DENABLE_STATIC_LIBS=ON -DENABLE_BAREFOOT_INTERNAL=OFF -DENABLE_FLATROCK=ON"
      
    BUILD_STAGE:                                                                                           #[Optional] Path to the working directory for this script, if not defined, the default will be used
      WORKDIR: "/build"
      COMMAND: "make -j12"                                                                                          #[Required] Build script that would be injected to the Coverity scan. Please be aware that it will be called from the WORKDIR defined in the same stage.
    COVERITY_PROJECT_NAME: "Bf-p4c-compilers"
    COVERITY_STREAM_NAME: "master__bf-p4c-compilers"                                                                #[Required] Name of the project at Coverity Server
    SCAN_ONLY_CHANGED_FILES: True
    COVERITY_ANALYZE_ARGS:               #[Optional] Additional flags to Coverity cov-run-desktop analyze
    - --set-new-defect-owner false
    - --concurrency                      #[Recomended] Flags listed in this example are recommended by Intel
    - --security 
    - --rule 
    - --enable-constraint-fpp 
    - --enable-fnptr 
    - --enable-virtual
    - --webapp-security       

  - NAME: "bf-p4c-compilers python"
    PROJECT_SRC_DIR: ""                                                                                           #[Required] 
    PREBUILD_STAGES:                                                                                              #[Optional] 

    COVERITY_BUILDLESS_LANGUAGE: "python"
    COVERITY_STREAM_NAME: "master__bf-p4c-compilers"                                                                    #[Required] Name of the project at Coverity Server
    COVERITY_PROJECT_NAME: "Bf-p4c-compilers"
    SCAN_ONLY_CHANGED_FILES: True
    COVERITY_ANALYZE_ARGS:               #[Optional] Additional flags to Coverity cov-run-desktop analyze
    - --set-new-defect-owner false
    - --concurrency                      #[Recomended] Flags listed in this example are recommended by Intel
    - --security 
    - --rule 
    - --enable-constraint-fpp 
    - --enable-fnptr 
    - --enable-virtual
    - --webapp-security

COVERITY:
  SERVER_URL: "https://coverityent.devtools.intel.com/prod8"                                                              #[Required] Address of Coverity Server that contain project reference
  BIN_DIRECTORY: "/opt/coverity/analysis"                                                                              #[Required] Root directory for Coverity binaries at runner machine
  AUTH_KEY: "/root/coverity.key"                                                                     #[Optional] Path to Coverity ltoken that will be used to authenticate to the Coverity server
  COMPILER_CONFIG_PATH: "/opt/coverity/analysis/config/coverity_config.xml" 

MISC:
  ROOT_WORKDIR: "/PRDA/workspace"                                                                          #[Required] Name of the directory for temporary Coverity files
  OS: "Linux"
  CONSOLE_LOG_LEVEL: "DEBUG"
         
       
