#! /usr/bin/env python

# Script to validate the compiler manifest
#
# The script can optionally dump the schema into a file.
#

import os
import sys
import argparse
import json, jsonschema

MYPATH = os.path.dirname(__file__)
GEN_SCHEMA_PATH=os.path.join(MYPATH, "..", "bf-p4c", "logging")
sys.path.append(GEN_SCHEMA_PATH)

from archive_manifest import BFNCompilerArchive, get_schema_version

parser=argparse.ArgumentParser()

parser.add_argument ("--dump-schema", action="store", default=None,
                     help="dump the schema into file")
parser.add_argument ("-g", dest="debug", action="store_true", default=False,
                     help="debug")

parser.add_argument ("manifest", help="the manifest.json to validate")
opts = parser.parse_args()


try:
    schema = BFNCompilerArchive.get_schema()

    if opts.dump_schema is not None:
        with open(opts.dump_schema, "wb") as schema_file:
            json.dump(schema, schema_file, indent=2)

    manifest = json.load(open(opts.manifest, 'r'))

    if opts.debug:
        print "validating", opts.manifest

    jsonschema.validate(manifest, schema)

    if opts.debug:
        print "successful validation"

except Exception as e:
    print e
