# -*- Python -*-
#
# Copyright (c) 2015-2017 Barefoot Networks, Inc.

# All Rights Reserved.

# NOTICE: All information contained herein is, and remains the property of
# Barefoot Networks, Inc. and its suppliers, if any. The intellectual and
# technical concepts contained herein are proprietary to Barefoot Networks, Inc.
# and its suppliers and may be covered by U.S. and Foreign Patents, patents in
# process, and are protected by trade secret or copyright law. Dissemination of
# this information or reproduction of this material is strictly forbidden unless
# prior written permission is obtained from Barefoot Networks, Inc.

# No warranty, explicit or implicit is provided, unless granted under a written
# agreement with Barefoot Networks, Inc.
#

from p4c_src.driver import BackendDriver
import p4c_src.barefoot as bfn

basepath = None
if source_basename is not None:
    basepath = "{}/{}".format(output_dir, source_basename)

# Tofino Native Architecture
tna_target = BackendDriver('tofino-native-barefoot')
tna_target.add_command('preprocessor', 'cc')
tna_target.add_command('compiler',
                    os.path.join(os.environ['P4C_BIN_DIR'], 'p4c-tofino'))
tna_target.add_command('assembler', bfn.get_assembler())
tna_target.add_command('linker', bfn.get_linker())
bfn.config_preprocessor(tna_target, "__TARGET_TOFINO__",
                        basepath, source_fullname)
bfn.config_compiler(tna_target, "tofino-native-barefoot", "__TARGET_TOFINO__",
                    basepath)
bfn.config_assembler(tna_target, "tofino", basepath, output_dir)
bfn.config_linker(tna_target, "tofino", source_basename, output_dir)
tna_target.enable_commands(['preprocessor', 'compiler', 'assembler', 'linker'])
config.target.append(tna_target)

# Tofino V1model architecture -- still need to support for P4_14
tofino_v1model_target = BackendDriver('tofino-v1model-barefoot')
tofino_v1model_target.add_command('preprocessor', 'cc')
tofino_v1model_target.add_command('compiler',
                                  os.path.join(os.environ['P4C_BIN_DIR'], 'p4c-tofino'))
tofino_v1model_target.add_command('assembler', bfn.get_assembler())
tofino_v1model_target.add_command('linker', bfn.get_linker())
bfn.config_preprocessor(tofino_v1model_target, "__TARGET_TOFINO__",
                        basepath, source_fullname)
bfn.config_compiler(tofino_v1model_target, "tofino-v1model-barefoot", "__TARGET_TOFINO__",
                    basepath)
bfn.config_assembler(tofino_v1model_target, "tofino", basepath, output_dir)
bfn.config_linker(tofino_v1model_target, "tofino", source_basename, output_dir)
tofino_v1model_target.enable_commands(['preprocessor', 'compiler',
                                    'assembler', 'linker'])
config.target.append(tofino_v1model_target)

# PSA implementation on Tofino
psa_target = BackendDriver('tofino-psa-barefoot')
psa_target.add_command('none', \
	'/bin/echo "target ' + str(psa_target) + ' not yet implemented"')
psa_target.enable_commands(['none'])
config.target.append(psa_target)
