# -*- Python -*-
#
# Copyright (c) 2015-2017 Barefoot Networks, Inc.

# All Rights Reserved.

# NOTICE: All information contained herein is, and remains the property of
# Barefoot Networks, Inc. and its suppliers, if any. The intellectual and
# technical concepts contained herein are proprietary to Barefoot Networks, Inc.
# and its suppliers and may be covered by U.S. and Foreign Patents, patents in
# process, and are protected by trade secret or copyright law. Dissemination of
# this information or reproduction of this material is strictly forbidden unless
# prior written permission is obtained from Barefoot Networks, Inc.

# No warranty, explicit or implicit is provided, unless granted under a written
# agreement with Barefoot Networks, Inc.
#

from p4c_src.driver import BackendDriver
import p4c_src.barefoot as bfn

class JBayBackend(bfn.BarefootBackend):
    def __init__(self, target, argParser):
        bfn.BarefootBackend.__init__(self, target, argParser)

        # command options
        self.config_preprocessor("__TARGET_JBAY__")
        self.config_compiler(self._backend, "__TARGET_JBAY__")
        self.config_assembler("jbay")
        self.config_linker("jbay")

# JBay Native Architecture
jbay_native_target = BackendDriver('jbay-native-barefoot', argParser)
config.target.append(jbay_native_target)

# JBay V1model architecture -- still need to support for P4_14
jbay_v1model_target = JBayBackend('jbay-v1model-barefoot', argParser)
config.target.append(jbay_v1model_target)

# PSA implementation on JBay
psa_target = BackendDriver('jbay-psa-barefoot')
psa_target.add_command('none', \
	'/bin/echo "target ' + str(psa_target) + ' not yet implemented"')
psa_target.enable_commands(['none'])
config.target.append(psa_target)
