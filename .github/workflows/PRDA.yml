# Workflow for Pull Request Differential Analysis
name: Pull Request Differential Analysis

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the protected branches
  pull_request:
    types: [opened, synchronize, reopened, closed]

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TARGET_BRANCH: ${{ startsWith(github.base_ref, 'rel_') && github.base_ref || 'master' }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  pull-request-differential-analysis:
    # Do not run PRDA on closed non merged PR (merged event doesn't exist)
    if: ${{ (github.event.action == 'closed' && github.event.pull_request.merged != true) == false}}
    # The tag of runner that the job will run on
    runs-on: kda-compilers
    container:
      # For branches other than rel_* use master container. Dockerfile for kwserver container is available at: bf-docker/Dockerfile.p4factory.coverity
      # Docker container is created in following jenkins job: https://qa-jenkins-01-bxdsw.sc.intel.com/job/coverity_docker_build/
      image: artifacts-bxdsw.sc.intel.com:9444/coverity:${{ startsWith(github.base_ref, 'rel_') && github.base_ref || 'master' }}
      #credentials:
        #username: ${{secrets.DOCKER_USERNAME}}
        #password: ${{secrets.DOCKER_PASSWORD}}
      options: "--privileged --user=root "

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it      
      - name: List files modified in PR
        id: list
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |            
            const files = await github.rest.pulls.listFiles({ owner: context.repo.owner, repo: context.repo.repo, pull_number: context.issue.number});
            const file_pattern = [".cpp" , ".h", ".hpp", ".py", ".c", "CmakeLists.txt", "yml", "coverity_config"]
            return files.data.map(i => i.filename).filter(file => file_pattern.some(p => file.includes(p)))
      
      - name: Checkout code
        if: ${{ steps.list.outputs.result != '' }}
        uses: actions/checkout@v3
        
      - name: Run KDA
        if: ${{ steps.list.outputs.result != '' }}
        run: |
          # Set Coverity stream name according to target branch
          sed -i "s/COVERITY_STREAM_NAME.*/COVERITY_STREAM_NAME : \"${TARGET_BRANCH}__bf-p4c-compilers\"/g" ci/coverity_config

          if ${{github.event.pull_request.merged}}; then
            UPDATE_FLAG="--update_status_only"
          fi
            python3.9 /PRDA/PRDA/src/main.py diff_analysis --tool coverity --pr_number ${{ github.event.number }} --config $GITHUB_WORKSPACE/ci/coverity_config --pat ${{ secrets.GITHUB_TOKEN }} $UPDATE_FLAG
