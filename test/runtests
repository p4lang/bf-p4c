#!/bin/bash

fast=false;

while expr "$1" : - >/dev/null; do
    case $1 in
    -f) fast=true
        ;;
    -*)
        echo >&2 "unknown argumnet $1"
        ;;
    esac
    shift
done

trap 'exit' 2

if [ $# -eq 0 ]; then
    set *.p4
fi

rm -rf faillog.txt
FAILLOG=$(pwd -P)/faillog.txt

GLSC=$HOME/p4c-tofino/p4c_tofino/shell.py
pass=0
fail=0

for f in "$@"; do
    echo -n $f
    pushd $(dirname $f) >/dev/null
    name=$(basename $f .p4)
    mkdir -p $name.out
    cd $name.out
    if $fast && [ -r $name.tfa ] || \
        $GLSC --verbose 2 -S ../$name.p4 >glsc.log 2>&1; then
        if tfas -vvvl tfas.config.log $name.tfa >tfas.log 2>&1; then
            for f in $name.out/*.json; do
                if reflow $f >tmp.json; then
                    mv tmp.json $f
                fi
                if $fast; then true
                elif reflow $(basename $f) >tmp.json; then
                    mv tmp.json $(basename $f)
                fi
                diff -u $f $(basename $f)
            done > json_diff.txt
            cnt=$(grep -Ev '^\+\+\+|^---|"int_inj"' json_diff.txt | grep -Ec '^\+|^-')
            if [ $cnt -gt 0 ]; then
                echo " mismatch"
                let fail++
                echo "$f:" >> $FAILLOG
                cat json_diff.txt >> $FAILLOG
            else
                echo " pass"
                let pass++
            fi
        else
            echo " tfas failed"
            let fail++
            echo "$f:" >> $FAILLOG
            cat tfas.log >> $FAILLOG
        fi
    else
        echo " p4 compile failed"
        let fail++
        echo "$f:" >> $FAILLOG
        cat glsc.log >> $FAILLOG
    fi
    popd >/dev/null
done

echo "$pass tests passed, $fail tests fail"
