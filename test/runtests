#!/bin/bash

fast=false;

while expr "$1" : - >/dev/null; do
    case $1 in
    -f) fast=true
        ;;
    -*)
        echo >&2 "unknown argumnet $1"
        ;;
    esac
    shift
done

trap 'exit' 2

if [ $# -eq 0 ]; then
    set *.p4
fi

rm -rf faillog.txt
FAILLOG=$(pwd -P)/faillog.txt

for f in \
    $HOME/p4c-tofino/p4c_tofino/shell.py \
    $PWD/../../p4c-tofino/p4c_tofino/shell.py \
    $PWD/../submodules/p4c-tofino/p4c_tofino/shell.py
do
    if [ -x $f ]; then
	GLSC=$f
	break
    fi
done
TFAS=$PWD/../tfas
REFLOW=$PWD/../reflow

pass=0
fail=0

for p4file in "$@"; do
    echo -n $p4file
    pushd $(dirname $p4file) >/dev/null
    name=$(basename $p4file .p4)
    mkdir -p $name.out
    cd $name.out
    ok=true
    if $fast && [ -r $name.tfa ]; then
        need_reflow=false
    elif $GLSC --verbose 2 -S ../$name.p4 >glsc.log 2>&1; then
        need_reflow=true
    else
        echo " p4 compile failed"
        let fail++
        echo "$p4file:" >> $FAILLOG
        cat glsc.log >> $FAILLOG
        ok=false
    fi
    if $ok && $TFAS -vvvl tfas.config.log $name.tfa >tfas.log 2>&1; then
        for f in $name.out/*.json; do
            if $REFLOW $f >tmp.json 2>/dev/null; then
                mv tmp.json $f
            fi
            if $need_reflow && $REFLOW $(basename $f) >tmp.json 2>/dev/null; then
                mv tmp.json $(basename $f)
            fi
            diff -u $f $(basename $f)
        done > json_diff.txt
        cnt=$(grep -Ev '^\+\+\+|^---|"int_inj"' json_diff.txt | grep -Ec '^\+|^-')
        if [ $cnt -gt 0 ]; then
            echo " mismatch"
            let fail++
            echo "$p4file:" >> $FAILLOG
            cat json_diff.txt >> $FAILLOG
        else
            echo " pass"
            let pass++
        fi
    elif $ok; then
        echo " tfas failed"
        let fail++
        echo "$p4file:" >> $FAILLOG
        cat tfas.log >> $FAILLOG
        ok=false
        if $need_reflow; then
            # we ran the compiler and tfas failed, so reflow the compiler outputs
            # so that later -f runs will work
            for f in *.json; do
                if $REFLOW $f >tmp.json 2>/dev/null; then
                    mv tmp.json $f
                fi
            done
        fi
    fi
    popd >/dev/null
done

echo "$pass tests passed, $fail tests fail"

if [ $fail -gt 0 ]; then
    exit 1
fi
