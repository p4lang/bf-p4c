# Intel CaaS (AMR)
ARG DOCKER_PROJECT=amr-registry.caas.intel.com/bxd-sw

# p4factory docker image to use (p4factory:<tag> or p4factory@sha256:<hash>)
ARG P4FACTORY_IMAGE=p4factory@sha256:d97a21673f49f54dc48618bf4f4c1eaaaada0ddaeba7a6c09b6dd1f9b22f7a5f

FROM ${DOCKER_PROJECT}/${P4FACTORY_IMAGE}

MAINTAINER bfn-docker <bfn-docker@barefootnetworks.com>

# Default to using 2 make jobs, which is a good default for CI. If you're
# building locally or you know there are more cores available, you may want to
# override this.
ARG MAKEFLAGS=j2
ARG BFN_P4C_GIT_SHA="UNKNOWN"

# Use 'jarvis' to build a jarvis image
#     'release' to build a release image
#     'glass' to build a base image for glass
ARG BUILD_FOR="tofino"

# Use 'release' if you don't wish to keep the build artifacts
# Use 'doc' to build only documentation
ARG IMAGE_TYPE=test
# Use 'true' if you wish to build glass for p4v or p4i
ARG BUILD_GLASS=false
# Use 'true' if you wish to generate ref outputs for p4i
ARG GEN_REF_OUTPUTS=false
# Use 'true' if you want to test P4-14 programs for Tofino with TNA architecture
ARG TOFINO_P414_TEST_ARCH_TNA=false

# Set up environment variables.

  # Set things up for distcc.
  ENV CC="distcc gcc"
  ENV CXX="distcc g++"
  ENV DISTCC_IO_TIMEOUT="450"

  # Set up Intel proxies.
  ENV http_proxy='http://proxy-dmz.intel.com:911'
  ENV https_proxy='http://proxy-dmz.intel.com:912'
  ENV ftp_proxy='http://proxy-dmz.intel.com:21'
  ENV socks_proxy='proxy-dmz.intel.com:1080'
  ENV no_proxy='intel.com,*.intel.com,localhost,127.0.0.1,10.0.0.0/8,192.168.0.0/16,172.16.0.0/12'
  ENV ALL_PROXY='socks5://proxy-us.intel.com'

# Handle p4factory/bf-p4c-compilers specifics
RUN ln -rs /usr/local/bin/tofinoB0_test_harness /usr/local/bin/tofino_test_harness && \
    ln -rs /usr/local/bin/jbayB0_test_harness /usr/local/bin/jbay_test_harness
RUN rm -rf /root/.ssh/id_* && \
    git config --global --add https.proxy http://proxy-dmz.intel.com:912

COPY . /bfn/bf-p4c-compilers/

RUN chmod a+x /bfn/bf-p4c-compilers/docker/docker_build.sh
RUN /bfn/bf-p4c-compilers/docker/docker_build.sh

# Setup PTF environment (Use bf-pktpy by default)
ENV PKTPY='True'

WORKDIR /bfn/bf-p4c-compilers
CMD ["/bin/bash"]
ENTRYPOINT ["/bfn/docker_entry_point.sh"]

# Expose port 80 for accessing Doxygen-generated documentation
EXPOSE 80
