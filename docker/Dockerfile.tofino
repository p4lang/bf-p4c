# Intel CaaS (AMR)
ARG DOCKER_PROJECT=amr-registry.caas.intel.com/bxd-sw

# p4factory docker image to use (p4factory:<tag> or p4factory@sha256:<hash>)
# p4factory_git_commit=0732c3195b7f51f0e52af2eb5e9e4788373916d1
ARG P4FACTORY_IMAGE=p4factory@sha256:dc9bc8b582eb1df2f0acef28c1a8820772745e87c9006c7ffda3666456136361

FROM ${DOCKER_PROJECT}/${P4FACTORY_IMAGE} AS environment

MAINTAINER bfn-docker <bfn-docker@barefootnetworks.com>

# Set to true to setup CI-specific configuration (e.g. path to ccache directory)
ARG BUILDING_IN_CI="true"

# Set up environment variables.

# Set things up for distcc.
ENV DISTCC_IO_TIMEOUT="450"

# Set up Intel proxies.
ENV http_proxy='http://proxy-dmz.intel.com:911'
ENV https_proxy='http://proxy-dmz.intel.com:912'
ENV ftp_proxy='http://proxy-dmz.intel.com:21'
ENV socks_proxy='proxy-dmz.intel.com:1080'
ENV no_proxy='intel.com,*.intel.com,localhost,127.0.0.1,10.0.0.0/8,192.168.0.0/16,172.16.0.0/12'
ENV ALL_PROXY='socks5://proxy-us.intel.com'

ENV PYTHONPATH="/p4factory/install/lib/python3.8/site-packages"

# Setup PTF environment (Use bf-pktpy by default)
ENV PKTPY='True'

RUN rm -rf /root/.ssh/id_*

# Copy directories needed to environment preparation separately to
# allow env preparation to be cached.
WORKDIR /bfn/bf-p4c-compilers
ADD docker docker
ADD scripts scripts
ADD p4-tests/p4testutils p4-tests/p4testutils

RUN docker/docker_prepare_env.sh

# Copy rest of the source tree.
COPY . /bfn/bf-p4c-compilers/

CMD ["/bin/bash"]
ENTRYPOINT ["/bfn/docker_entry_point.sh"]

