# run with switch16_z2

add SwitchIngressParser.$PORT_METADATA ingress_port:8 set_port_metadata( \
        port_lag_index:6 port_lag_label:0)

add SwitchIngress.pkt_validation.validate_ip 1 \
    hdr.arp.$valid:0 hdr.ipv4.$valid:1 hdr.ipv6.$valid:0 \
    local_md.flags.ipv4_checksum_err:* hdr.ipv4.version:4 hdr.ipv4.ihl:* \
    hdr.ipv4.flags:* hdr.ipv4.frag_offset:* hdr.ipv4.ttl:* hdr.ipv4.src_addr:* \
    hdr.ipv6.version:* hdr.ipv6.hop_limit:* hdr.ipv6.src_addr:* \
    valid_ipv4_pkt(ip_frag:0, is_link_local:0)

add SwitchIngress.pkt_validation.validate_ethernet 1 \
    hdr.vlan_tag$0.$valid:0 hdr.ethernet.src_addr:* hdr.ethernet.dst_addr:* \
    valid_pkt_untagged(pkt_type:0)

add SwitchIngress.ingress_port_mapping.port_mirror.port_mirror port:8 NoAction()

add SwitchIngress.ingress_port_mapping.port_mapping ingress_port:8 set_port_properties( \
        exclusion_id:2 learning_mode:0 trust_mode:0 qos_group:0 color:0 \
        tc:0 meter_index:0 sflow_session_id:0xff mac_pkt_class:0)

add SwitchIngress.ingress_port_mapping.bd_action_profile 1 \
    set_bd_properties(bd:0x100c vrf:4 bd_label:0 stp_group: learning_mode:0     \
        ipv4_unicast_enable:1 ipv4_multicast_enable:0 igmp_snooping_enable:0    \
        ipv6_unicast_enable:1 ipv6_multicast_enable:0 mld_snooping_enable:0     \
        mpls_enable:0 mrpf_group:0 zone:0)

add SwitchIngress.ingress_port_mapping.port_vlan_to_bd_mapping 1                \
    ingress_port_lag_index:6 hdr.vlan_tag$0.$valid:0 hdr.vlan_tag$0.vid:*       \
    set_bd_properties(action_addr:0x10)

add SwitchIngress.ingress_port_mapping.rmac.pv_rmac 1 local_md.ingress_port_lag_index:6 \
    hdr.vlan_tag$0.$valid:0 hdr.vlan_tag$0.vid:* hdr.ethernet.dst_addr:* rmac_hit(()

add ipv4_host local_md.lkp.ip_dst_addr:0x64640101 local_md.vrf:0x4 \
    fib_hit(nexthop_index:0x4 fib_label:0)

add SwitchIngress.bd_stats.bd_stats bd:0x100C pkt_type:0 count()

add SwitchIngress.nexthop.nexthop nexthop:4 set_nexthop_properties_tunnel(dip_index:1)

add SwitchIngress.outer_fib.fib dip_index:1 set_nexthop_properties(meter_pfe:0x800000)
add SwitchIngress.outer_fib.ecmp_action_profile 0 \
    set_nexthop_properties(port_lag_index:7 nexthop_index:3)
selector SwitchIngress.outer_fib.ecmp_selector 0 add 0

add SwitchIngress.lag.lag port_lag_index:7 set_lag_port(meter_pfe:0x800000)
add SwitchIngress.lag.lag_action_profile 0 set_lag_port(port:9)
selector SwitchIngress.lag.lag_selector 0 add 0

add SwitchEgress.egress_port_mapping.port_mapping port:9 port_normal( \
        port_lag_index:7 port_lag_label:0 qos_group:0 meter_index:0 sflow_session_id:0)

add SwitchEgress.outer_nexthop.outer_nexthop nexthop:3 rewrite_l2(bd:0x100b)

add SwitchEgress.port_mirror.port_mirror port:9 NoAction()

add SwitchEgress.queue.queue port:9 qid:0 count()

add SwitchEgress.egress_bd_stats.bd_stats bd:0x100b pkt_type:0 count()

add SwitchEgress.egress_vrf.vrf_mapping hdr.ipv4.$valid:1 hdr.ipv6.$valid:0 vrf:4 \
    set_ipv4_vrf_properties(vni:0  smac:0x00ba7ef00000)

add SwitchEgress.egress_bd.bd_mapping bd:0x100b set_bd_properties( \
        smac:0x007766554433 mtu:0x5eb)

add SwitchEgress.tunnel_nexthop.tunnel_nexthop tunnel_nexthop:4 l3_tunnel_encap( \
        dmac:0x003333333333 type:3 dip_index:1 tunnel_index:1)

add SwitchEgress.neighbor.neighbor nexthop:3 rewrite_l2(dmac:0x001111111111)


packet 8 007766554433 002222222233 0800 \
         4500 0056 006c 0000 40 06 b06c 64640001 64640101 \
         04d2 0050 00000000 00000000 50 02 2000 c4b5 0000 \
         00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f \
         10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f \
         20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d

expect 9 001111111111 007766554433 0800 \
         4500 0056 006c 0000 3f 06 b16c 64640001 64640101 \
         04d2 0050 00000000 00000000 50 02 2000 c4b5 0000 \
         00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f \
         10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f \
         20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d
