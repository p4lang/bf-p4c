#!/bin/bash

# Copyright 2013-2024 Intel Corporation.
#
# This software and the related documents are Intel copyrighted materials,
# and your use of them is governed by the express license under which they
# were provided to you ("License"). Unless the License provides otherwise,
# you may not use, modify, copy, publish, distribute, disclose or transmit this
# software or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no
# express or implied warranties, other than those that are expressly stated
# in the License.

SUDO=sudo
LDCONFIG=ldconfig

die () {
    if [ $# -gt 0 ]; then
        echo >&2 "$@"
    fi
    exit 1
}

gcc6archive="deb http://archive.ubuntu.com/ubuntu bionic main universe"
if ! grep -q "$gcc6archive" /etc/apt/sources.list; then
    echo -e "\n#needed for gcc6\n$gcc6archive" | sudo tee -a /etc/apt/sources.list >/dev/null
fi

$SUDO apt-get update || die "failed to update apt"
apt_packages="automake bison cmake curl doxygen flex g++-6 graphviz \
    libgc-dev python3 python3-pip texinfo unzip \
    libboost1.67-dev libboost-regex1.67-dev libboost-iostreams1.67-dev libboost-graph1.67-dev \
    libboost-system1.67-dev libboost-filesystem1.67-dev libboost-thread1.67-dev \
    libprotobuf-dev protobuf-compiler protobuf-compiler-grpc libgrpc-dev libgrpc++-dev \
    thrift-compiler libthrift-dev rapidjson-dev libfl-dev libcli-dev z3"
$SUDO apt-get install -y $apt_packages || die "failed to install packages"

pip_packages="packaging jsl protobuf grpcio pyinstaller pyyaml jsonschema"
pip install $pip_packages || die "failed to install packages"

#for some reason need this too?
pip3 install pyyaml

### Model dependencies that need manual build
## libcrafter
if [ ! -r /usr/local/include/crafter.h -o ! -x /usr/local/lib/libcrafter.so ]; then
    git clone https://github.com/pellegre/libcrafter
    cd libcrafter/libcrafter
    ./autogen.sh
    make || die "Failed to build libcrafter"
    $SUDO make install
    $SUDO $LDCONFIG
    cd ../..
    rm -rf libcrafter
else
    echo "libcrafter already installed"
fi

#need to checkout, build, and install bf-syslibs (branch brig-stable)
#need to checkout, build, and install bf-utils (branch brig-stable)
#need to checkout, build, and install PI (branch stable)
#  -- need to add 'ln -s ../server_config .' in PI/proto/server
#need to checkout, build, and install bf-drivers (branch brig-stable)
#  -- needs newer version of gRPC/gRPC++ than is available on Ubuntu 20.04?
#need to checkout, build, and install model (branch brig-stable)

# run CC="distcc gcc-6" CXX="distcc g++-6" ./bootstrap_bfn_compilers.sh
#  -- need to add explicit -fPIC to compiler flags?

cat <<EOF

Need to checkout, build and install the following repos:
- bf-syslibs (branch brig-stable)
- bf-utils (branch brig-stable)
- PI (branch stable)
- bf-drivers (branch brig-stable)
- model (branch brig-stable)

Then you can configure and build the compiler
    CC="distcc gcc-6" CXX="distcc g++-6" ./bootstrap_bfn_compilers.sh
    cd build
    make -j12

EOF

